/* Imports for variables */
@import url('./vars.css');

/* Shared card style for forms (used by config/password wall) */
.card{
  background: var(--card-bg);
  padding:18px;
  border-radius:12px;
  box-shadow:0 6px 18px rgba(20,30,60,0.08);
  text-align:center;
  width:380px;
  max-width: 90%; 
  box-sizing:border-box;
}

/* floating leadStatus notification (top-center) */
.statusbar.floating {
  position: fixed;
  top: 26px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 9999;

  background: var(--grey-accent);
  color: var(--green-accent1);                  /* white text */
  padding: 8px 14px;
  border-radius: 10px;
  box-shadow: 0 8px 24px rgba(0,0,0,0.35);
  min-width: 200px;
  max-width: calc(100% - 40px);
  text-align: center;
  font-weight: 600;
  font-size: 16px;
  line-height: 1.2;

  /* start hidden via opacity and slide */
  opacity: 0;
  pointer-events: auto;
  display: block; /* we manage visibility via classes */
}

/* show animation */
.statusbar.floating.show {
  animation: slideDownFade 220ms ease forwards;
}

/* subtle hide animation */
.statusbar.floating.hide {
  animation: fadeOutUp 180ms ease forwards;
}

/* animations */
@keyframes slideDownFade {
  from { transform: translateX(-50%) translateY(-8px); opacity: 0; }
  to   { transform: translateX(-50%) translateY(0);     opacity: 1; }
}
@keyframes fadeOutUp {
  from { transform: translateX(-50%) translateY(0);     opacity: 1; }
  to   { transform: translateX(-50%) translateY(-8px);  opacity: 0; }
}

/* keep existing hidden helper, but floating() will remove hidden when used */
.hidden { display:none !important; }

#controllerTitle {
  font-size: 2.5em;
  font-weight: bold;
  color: var(--green-accent1);
  margin-bottom: 10px;
  user-select: none;
}

/* Base button style (shared across app) */
button{
  margin:8px;
  padding:12px 18px;
  border-radius:8px;
  border:1px solid #ddd;
  cursor:pointer;
  background: var(--green-accent1);
  transition: background 0.1s, transform 0.1s, box-shadow 0.1s;
  font-size:18px;
  font-weight:500;
  min-width: 90px; /* Ensure minimum width for touch targets */
  max-width: 400px; /* Ensure minimum width for touch targets */
}

button:hover {
  background:#f0f0f0;
}
button:disabled {
  opacity: 0.3;
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}
/* keep layout, but make the button visually hidden and non-interactive */
.invisible-button {
  /* display: none; */
  /* visibility: hidden; */
  pointer-events: none;      /* ensure no mouse events */
  user-select: none;         /* avoid accidental selection */
  opacity: 0;                /* double-safety â€” fully transparent */
}

/* Primary buttons (Used for lead form next/submit) */
.primary-btn {
  color: #fff;
  background: var(--green-accent1);
  border: solid var(--green-accent1);
  border-width: 3px;        /* top right bottom left = 1px */
  border-bottom-width: 4px; /* make bottom thicker */
  box-shadow: 0 4px 10px rgba(118, 75, 162, 0.3);

  box-sizing: border-box;

  padding:8px 20px;

}
.primary-btn:hover {
  background: #fff;
  color: var(--green-accent1);
  transform: translateY(-1px);
}


/* Reset button style (for config menu) */
.reset-btn {
  width:auto;
  color:#fff;
  margin:8px;
  padding:10px 18px;
  background: var(--danger);
  box-shadow:0 2px 10px rgba(232,77,77,0.3);
}

.reset-btn:hover {
  background:#d83b3b;
  transform: translateY(-1px);
  box-shadow:0 4px 12px rgba(232,77,77,0.5);
}

/* Status area */
.status{
  word-break:break-word;
}

/* Error status */
.status.error { color: #ff0000; }


/* Simple form layout used by config & password */
form { text-align:left; display:block; }

/* Make the row take available width and cap it for readability */
.form-row {
  width: 100%;
  max-width: 720px; /* optional, tune to taste */
  margin-left: auto;
  margin-right: auto;
  justify-content: flex-start; /* label + input align left; input will grow */
  gap: 18px; /* spacing between label and input */
  box-sizing: border-box;
}

/* Give the label a fixed width so input knows how much space is left */
.form-row label {
  flex: 0 0 1000px;     /* fixed 100px label (tweak as needed) */
  max-width: 140px;
  text-align: left;
}

/* Let input take remaining space and allow it to shrink properly */
.form-row input {
  flex: 1 1 auto;    /* grow and shrink to fill available space */
  min-width: 0;      /* crucial: allow the input to shrink below its content's min-width */
  width: 500px;       /* don't use width:100% inside flex item */
  /* box-sizing: border-box; */

  border-radius: 8px;
  border:2px solid #00000000;
  padding:10px 12px;
  background-color: var(--muted);

  margin-top: 3px;
}

.form-row input:focus {
  outline:none;
  border:2px solid var(--green-accent1);
  box-shadow:0 0 8px rgba(102,126,234,0.3);
}


.form-row button { padding:10px 12px; margin:0; }

.btn-row{
  display: flex;
  justify-content: center;
}

/* Divider instead of inline HR */
.divider {
  margin:14px 0;
  opacity:0.08;
  border:0;
  height:1px;
  background: currentColor;
  color: #000;
}
